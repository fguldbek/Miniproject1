@page "/login/{target:alpha?}"
@inject HttpClient Http
@using Miniproject1.Service
@inject ILoginService loginService 
@inject NavigationManager NavManager

<h3>Login</h3>

@if (!string.IsNullOrEmpty(target)) 
{
    // Viser en besked til brugeren afhængigt af hvilken side de forsøgte at tilgå
    <p style="color: gray;">
        @("Log in to " + (target == "CreatePost" ? "create a post" : target == "MyPage" ? "view your page" : "access this page"))
    </p>
}

<div class="row justify-content-center">
    <div class="col-md-6 mb-3"></div>
    <label for="username">Username</label>
    <InputText id="username" @bind-Value="username" placeholder="Write Username" class="form-control"/>
</div>
<div class="row justify-content-center">
    <div class="col-md-6 mb-3"></div>
    <label for="password">Password</label>
    <InputText id="password" @bind-Value="password" placeholder="Write Password" class="form-control" />
</div>
<div class="row justify-content-center">
    <div class="col-md-6 mb-3"></div>
    <button @onclick="OnClickLogin" class="btn btn-primary">Login</button>
</div>
<span style="color: red;">@errortext</span>

@code {
    string username = "";
    string password = "";
    string errortext = "";

    [Parameter]
    public string? target { get; set; } // Modtager 'target' parameteren for at vise besked

    private async Task OnClickLogin()
    {
        var success = await loginService.Login(username, password);
        if (success)
        {
            // Navigerer til target-siden efter vellykket login
            if (!string.IsNullOrEmpty(target))
            {
                NavManager.NavigateTo("/" + target);
            }
            else
            {
                NavManager.NavigateTo("/");
            }
        }
        else
        {
            errortext = "TRY AGAIN....";
        }
    }
}