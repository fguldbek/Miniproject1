@inherits LayoutComponentBase
@inject Miniproject1.Service.ILoginService LoginService
@inject NavigationManager NavManager



<div class="page">
    <div class="sidebar">
        <NavMenu/>
    </div>

    <main>
        <div class="top-row px-4">
            <NavLink @onclick="HandleLoginLogoutClick" class="nav-link" href="Login" ActiveClass="active">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> 
                @buttonText
            </NavLink>

        </div>
        
     
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private string buttonText = "Log In";

    protected override async Task OnInitializedAsync()
    {
        // Tjek om brugeren er logget ind, og opdater knapteksten
        try
        {
            var user = await LoginService.GetUserLoggedIn();
            buttonText = user == null ? "Log In" : "Log Out";
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during initialization: {ex.Message}");
        }
    }

    private async Task HandleLoginLogoutClick()
    {
        var user = await LoginService.GetUserLoggedIn();

        if (user == null)
        {
            // Hvis brugeren ikke er logget ind, naviger til login-siden
            NavManager.NavigateTo("/login/Home");
        }
        else
        {
            // Hvis brugeren er logget ind, log dem ud og opdater knapteksten
            try
            {
                await LoginService.Logout();
                buttonText = "Log In";
                await InvokeAsync(StateHasChanged); // Opdaterer UI
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error during logout: {ex.Message}");
            }
        }
    }
}

